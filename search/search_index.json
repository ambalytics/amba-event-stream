{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"--8<-- \"README.md\"","title":"Home"},{"location":"code_ref/","text":"event object Event a representation of an json event to use from_json ( self , json_msg ) set this event from json_msg Parameters: Name Type Description Default json_msg loaded json required Source code in event_stream/event.py def from_json ( self , json_msg ): \"\"\"set this event from json_msg Arguments: json_msg: loaded json \"\"\" self . data = json_msg # self.data = json.loads(json_msg) get ( self , key ) this will get a value to a given key in the data of this event this is equal to data['key'] if access to nested properties is needed use data directly Parameters: Name Type Description Default key a valid key for the data of this event required Source code in event_stream/event.py def get ( self , key ): \"\"\"this will get a value to a given key in the data of this event this is equal to data['key'] if access to nested properties is needed use data directly Arguments: key: a valid key for the data of this event \"\"\" return self . data [ key ] # t = self.data # # todo check if key exist # for key in keys: # t = t[key] # return t get_json ( self ) return this event as json equal to json.dumps(data) Source code in event_stream/event.py def get_json ( self ): \"\"\"return this event as json equal to json.dumps(data) \"\"\" return json . dumps ( self . data ) set ( self , key , value ) this will set a value to a given key in the data of this event this is equal to data['key'] = value if setting nested properties use data directly Parameters: Name Type Description Default key a valid key for the data of this event required value the value to store required Source code in event_stream/event.py def set ( self , key , value ): \"\"\"this will set a value to a given key in the data of this event this is equal to data['key'] = value if setting nested properties use data directly Arguments: key: a valid key for the data of this event value: the value to store \"\"\" self . data [ key ] = value","title":"Workflow"},{"location":"code_ref/#event_stream.event.Event","text":"a representation of an json event to use","title":"Event"},{"location":"code_ref/#event_stream.event.Event.from_json","text":"set this event from json_msg Parameters: Name Type Description Default json_msg loaded json required Source code in event_stream/event.py def from_json ( self , json_msg ): \"\"\"set this event from json_msg Arguments: json_msg: loaded json \"\"\" self . data = json_msg # self.data = json.loads(json_msg)","title":"from_json()"},{"location":"code_ref/#event_stream.event.Event.get","text":"this will get a value to a given key in the data of this event this is equal to data['key'] if access to nested properties is needed use data directly Parameters: Name Type Description Default key a valid key for the data of this event required Source code in event_stream/event.py def get ( self , key ): \"\"\"this will get a value to a given key in the data of this event this is equal to data['key'] if access to nested properties is needed use data directly Arguments: key: a valid key for the data of this event \"\"\" return self . data [ key ] # t = self.data # # todo check if key exist # for key in keys: # t = t[key] # return t","title":"get()"},{"location":"code_ref/#event_stream.event.Event.get_json","text":"return this event as json equal to json.dumps(data) Source code in event_stream/event.py def get_json ( self ): \"\"\"return this event as json equal to json.dumps(data) \"\"\" return json . dumps ( self . data )","title":"get_json()"},{"location":"code_ref/#event_stream.event.Event.set","text":"this will set a value to a given key in the data of this event this is equal to data['key'] = value if setting nested properties use data directly Parameters: Name Type Description Default key a valid key for the data of this event required value the value to store required Source code in event_stream/event.py def set ( self , key , value ): \"\"\"this will set a value to a given key in the data of this event this is equal to data['key'] = value if setting nested properties use data directly Arguments: key: a valid key for the data of this event value: the value to store \"\"\" self . data [ key ] = value","title":"set()"}]}